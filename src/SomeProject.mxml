<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" width="1047" click="application1_clickHandler(event)" activate="application1_activateHandler(event)">

	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			import utils.Figure;
			import utils.GetHTTPData;
			import utils.ImageCached;
			import utils.MyEvents;
			
			public static var CurrentAction:Number = 0;
			private static var currentImage:Image;
			
			private static var startX:Number = 64;
			private static var startY:Number = 57;
			private static var maxX:Number = 691; //691
			private static var maxY:Number = 362; //362
			private static var part:Number = 260; //195
			private static var partCount:Number = 6;
			private static var partX:Number = part/partCount;
			private static var partY:Number = part/partCount;
			
			private var getHTTPData:GetHTTPData = new GetHTTPData(this);
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CurrentAction = 1;
				MyEvents.gather = false;
				TextField1.text = "Сажаем клевер";
			}
			
			protected function PlantPotato_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CurrentAction = 2;
				MyEvents.gather = false;
				TextField1.text = "Сажаем карторшку"; 
			}
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CurrentAction = 3;
				MyEvents.gather = false;
				TextField1.text = "Сажаем подсолнух"; 
			}
			
			protected function button4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				CurrentAction = 0;
				MyEvents.gather = true;
				TextField1.text = "Собираем урожай"; 
			}

			protected function application1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				//image1_clickHandler(event);
			}
			
			//protected class point
			private function turnPoint(p:Point):Point
			{
				var cos:Number = 0.707;
				var sin:Number = 0.707;
				return new Point( int((cos*p.x-sin*p.y) * 1.9 - 115) , int((sin*p.x+cos*p.y) - 345));
			}
			private function unTurnPoint(p:Point):Point
			{
				var cos:Number = 0.707;
				var sin:Number = -0.707;
				p.x += 115;
				p.x /= 1.9;
				p.y += 345;
				return new Point( int(cos*p.x-sin*p.y) , int(sin*p.x+cos*p.y));
			}

			protected function image1_clickHandler(event:MouseEvent):void
			{
				var i:Number;
				var j:Number;
				var p:Point = new Point;
				var figureTest:Figure;
				if(CurrentAction > 0)
				{
					p.x = event.stageX - 40;
					p.y = event.stageY;
					p.y /= 1.1;
					p = unTurnPoint(p);
					p.x -= startX;
					p.x -= maxX/2;
					p.y -= startY;
					var coordX:Number = int(p.x/partX) - 1;
					var coordY:Number = int(p.y/partY) - 1;
					p.x = int(coordX*partX);
					p.y = int(coordY*partY);
					p.x += startX;
					p.x += maxX/2;
					p.y += startY;
					p = turnPoint(p);
					TextField1.text = "" + coordX + "" + coordY;
					// Суть проверки в том, что сетка - это квадрат от 0 до partCount
					// и если мы в эту сетку не убираемся, значит клик произошёл не по полю
					if(coordX >= 0 && coordX < partCount && coordY >= 0 && coordY < partCount)
					{
						figureTest = new Figure(p, CurrentAction);
						Figure.arrFigures.push(figureTest);
						this.parent.addChild(figureTest);
						var data:Object = {
							"type" : "add",
							"x" : coordX,
							"y" : coordY,
							"figure": Figure.allObjects[CurrentAction - 1]
						}
						getHTTPData.ask("http://localhost:3000/data/save", "add", data);
					}
				}
			}


			protected function application1_activateHandler(event:Event):void
			{
			}


			protected function button3_clickHandler(event:MouseEvent):void
			{
				//Alert.show("Растут: " + arrFigures.length);
				Figure.arrFigures.forEach(growFigure);
			}
			
			// Слушает ответ запроса к серверу
			public function answer(data:XML, type:String):void
			{
				switch(type)
				{
					case "def":
						var figureTest:Figure; 
						var figures:XML = new XML();
						var p:Point = new Point();
						var typeFigure:Number;
						for each (var fields:XML in data.elements() )
						{
							for each(figures in fields.elements())
							{
								// figures.attribute("id");
								typeFigure = Figure.allObjects.indexOf(String(figures.name()));
								p.x = (maxX/2) + partX * int(figures.attribute("x")) + startX;
								p.y = partY * int(figures.attribute("y")) + startY;
								p = turnPoint(p);
								figureTest = new Figure(p, typeFigure + 1);
								figureTest.id = figures.attribute("id");
								Figure.arrFigures.push(figureTest);
								this.parent.addChild(figureTest);
							}
						}
						break;
					case "add":
						//Alert.show("Добавлен новый элемент");
						break;
				}
			}
			
			private function growFigure(element:Figure, index:int, arr:Array):void
			{
				//TextField1.text = "" + index;
				//arr.splice(index, 1);
				//this.parent.removeChild(element);
				element.grow();
			}
			

			protected function button5_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				getHTTPData.ask("http://localhost:3000/data/all", "def");
			}

		]]>
	</fx:Script>

	<s:states>
		<s:State name="State1"/>
	</s:states>
	<fx:Declarations>
		<!-- Разместить невизуальные элементы (например, службы или объекты значений) -->
	</fx:Declarations>
	<s:Button x="881.25" y="9.9" label="Посадить картошку" width="150" id="PlantPotato" click="PlantPotato_clickHandler(event)"/>
	<s:Button x="881.25" y="38.9" label="Посадить подсолнух" width="150" click="button1_clickHandler(event)"/>
	<s:Button x="881.25" y="67.9" label="Посадить клевер" width="150" click="button2_clickHandler(event)"/>
	<s:Button x="881.25" y="96.9" label="Собрать" width="150" click="button4_clickHandler(event)"/>
	<s:Button x="881.25" y="125.9" label="Рости" width="150" click="button3_clickHandler(event)"/>
	<mx:Image x="0" y="0" source="http://localhost:3000/BG.jpg" width="862" height="500" click="image1_clickHandler(event)"/>
	<s:TextInput y="154" width="144" id="TextField1" x="881"/>
	<s:Button x="881" y="184" label="Вернуть состояние" width="150" click="button5_clickHandler(event)"/>
</s:Application>
